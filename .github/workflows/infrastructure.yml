name: Deploy to AWS

on:
  push:
    branches:
      - main
  pull_request:
    # branches:
      

jobs:
  terraform:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          token: ${{ secrets.TOKEN }}
          ref: main

      # Step 2: Configure Git
      - name: Configure Git
        run: |
          git config --global user.name 'kishorevr97'
          git config --global user.email 'kishorevr97@gmail.com'

      # Step 3: Set up Terraform
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2.0.3
        with:
          terraform_version: 1.5.6
      
      # Step 5: Configure AWS credentials
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.SECRET_KEY }}
          aws-region: eu-north-1

      # Step 6: Initialize Terraform
      - name: Terraform Init
        run: terraform init

      # Step 7: Terraform Plan
      - name: Terraform Plan
        run: terraform plan -out=tfplan

      # - name: install lfs
      #   run: |
      #    git lfs install
      #    git lfs track ".terraform/**/*"
      #    git add .gitattributes
      #    git commit -m "Add .terraform files to Git LFS"
      #    git push origin main

      - name: Install Terraform Docs
        if: github.event_name == 'pull_request'
        uses: terraform-docs/gh-actions@v1.3.0
        with:
          working-dir: .
          output-file: README.md
          output-method: inject
          git-push: "true"


      # Step 8: Apply Terraform (only on push to main branch)
      - name: Apply Terraform
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: terraform apply -auto-approve
